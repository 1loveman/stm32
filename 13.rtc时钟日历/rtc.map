ARM Linker, 4.1 [Build 481] [Standard]

==============================================================================

Section Cross References

    system_stm32f10x.o(.text) refers to system_stm32f10x.o(.data) for SystemCoreClock
    stm32f10x_bkp.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_BackupResetCmd
    stm32f10x_pwr.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB1PeriphResetCmd
    stm32f10x_rcc.o(.text) refers to stm32f10x_rcc.o(.data) for APBAHBPrescTable
    stm32f10x_usart.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_APB2PeriphResetCmd
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to stm32f10x_it.o(.text) for NMI_Handler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    sys.o(.text) refers to misc.o(.text) for NVIC_PriorityGroupConfig
    sys.o(.text) refers to stm32f10x_rcc.o(.text) for RCC_DeInit
    sys.o(.text) refers to stm32f10x_flash.o(.text) for FLASH_SetLatency
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry.o(.ARM.exidx) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for .ARM.Collect$$rtentry$$00000000
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for .ARM.Collect$$rtentry$$00000002
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for .ARM.Collect$$rtentry$$00000009
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for .ARM.Collect$$rtentry$$0000000C
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002F) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_user_alloc_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$0000000C) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000022) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000023) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    fpinit.o(x$fpl$fpinit) refers to rt_fp_status_addr_intlibspace.o(.text) for __rt_fp_status_addr
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for .ARM.Collect$$rtexit$$00000002
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_fp_status_addr.o(.text) refers to rt_fp_status_addr.o(.bss) for __rt_fp_status_addr_data
    rt_fp_status_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    argv_veneer.o(.emb_text) refers to _get_argv_nomalloc.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing core_cm3.o(.emb_text), (32 bytes).
    Removing misc.o(.text), (248 bytes).
    Removing stm32f10x_bkp.o(.text), (196 bytes).
    Removing stm32f10x_flash.o(.text), (1480 bytes).
    Removing stm32f10x_pwr.o(.text), (216 bytes).
    Removing stm32f10x_rcc.o(.text), (932 bytes).
    Removing stm32f10x_rcc.o(.data), (20 bytes).
    Removing stm32f10x_rtc.o(.text), (376 bytes).
    Removing stm32f10x_usart.o(.text), (1036 bytes).
    Removing sys.o(.text), (122 bytes).

10 unused section(s) (total 4658 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000005e0, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x000005cc, Max: 0x00010000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000ec   Data   RO          225    RESET               startup_stm32f10x_md.o
    0x080000ec   0x00000008   Code   RO          279  * !!!main             c_w.l(__main.o)(c_w.l)
    0x080000f4   0x00000006   Code   RO          311    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          319    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          321    .ARM.Collect$$libinit$$00000008  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          323    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          326    .ARM.Collect$$libinit$$0000000D  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          328    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          330    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          332    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          334    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          336    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          338    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          340    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          342    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          344    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000000   Code   RO          346    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)(c_w.l)
    0x080000fa   0x00000008   Code   RO          348    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)(c_w.l)
    0x08000102   0x00000000   Code   RO          352    .ARM.Collect$$libinit$$0000002A  c_w.l(libinit2.o)(c_w.l)
    0x08000102   0x00000000   Code   RO          354    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)(c_w.l)
    0x08000102   0x00000000   Code   RO          356    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)(c_w.l)
    0x08000102   0x00000002   Code   RO          357    .ARM.Collect$$libinit$$0000002F  c_w.l(libinit2.o)(c_w.l)
    0x08000104   0x00000002   Code   RO          383    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)(c_w.l)
    0x08000106   0x00000000   Code   RO          396    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)(c_w.l)
    0x08000106   0x00000000   Code   RO          399    .ARM.Collect$$libshutdown$$00000006  c_w.l(libshutdown2.o)(c_w.l)
    0x08000106   0x00000000   Code   RO          402    .ARM.Collect$$libshutdown$$00000009  c_w.l(libshutdown2.o)(c_w.l)
    0x08000106   0x00000000   Code   RO          404    .ARM.Collect$$libshutdown$$0000000B  c_w.l(libshutdown2.o)(c_w.l)
    0x08000106   0x00000000   Code   RO          407    .ARM.Collect$$libshutdown$$0000000E  c_w.l(libshutdown2.o)(c_w.l)
    0x08000106   0x00000002   Code   RO          408    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)(c_w.l)
    0x08000108   0x00000000   Code   RO          281    .ARM.Collect$$rtentry$$00000000  c_w.l(rtentry.o)(c_w.l)
    0x08000108   0x00000000   Code   RO          284    .ARM.Collect$$rtentry$$00000002  c_w.l(rtentry2.o)(c_w.l)
    0x08000108   0x00000006   Code   RO          299    .ARM.Collect$$rtentry$$00000004  c_w.l(rtentry4.o)(c_w.l)
    0x0800010e   0x00000000   Code   RO          286    .ARM.Collect$$rtentry$$00000009  c_w.l(rtentry2.o)(c_w.l)
    0x0800010e   0x00000004   Code   RO          287    .ARM.Collect$$rtentry$$0000000A  c_w.l(rtentry2.o)(c_w.l)
    0x08000112   0x00000000   Code   RO          289    .ARM.Collect$$rtentry$$0000000C  c_w.l(rtentry2.o)(c_w.l)
    0x08000112   0x00000008   Code   RO          290    .ARM.Collect$$rtentry$$0000000D  c_w.l(rtentry2.o)(c_w.l)
    0x0800011a   0x00000002   Code   RO          315    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)(c_w.l)
    0x0800011c   0x00000000   Code   RO          361    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)(c_w.l)
    0x0800011c   0x00000004   Code   RO          362    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)(c_w.l)
    0x08000120   0x00000006   Code   RO          363    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)(c_w.l)
    0x08000126   0x00000002   PAD
    0x08000128   0x00000004   Code   RO          373    .emb_text           c_w.l(argv_veneer.o)(c_w.l)
    0x0800012c   0x000001c8   Code   RO           17    .text               system_stm32f10x.o
    0x080002f4   0x00000040   Code   RO          226    .text               startup_stm32f10x_md.o
    0x08000334   0x0000001a   Code   RO          233    .text               stm32f10x_it.o
    0x0800034e   0x00000006   Code   RO          277    .text               c_w.l(heapauxi.o)(c_w.l)
    0x08000354   0x0000004a   Code   RO          301    .text               c_w.l(sys_stackheap_outer.o)(c_w.l)
    0x0800039e   0x0000000c   Code   RO          303    .text               c_w.l(exit.o)(c_w.l)
    0x080003aa   0x00000002   PAD
    0x080003ac   0x00000008   Code   RO          312    .text               c_w.l(libspace.o)(c_w.l)
    0x080003b4   0x0000000c   Code   RO          371    .text               c_w.l(rt_fp_status_addr_intlibspace.o)(c_w.l)
    0x080003c0   0x0000000c   Code   RO          375    .text               c_w.l(sys_exit.o)(c_w.l)
    0x080003cc   0x0000012c   Code   RO          379    .text               c_w.l(_get_argv_nomalloc.o)(c_w.l)
    0x080004f8   0x00000018   Code   RO          384    .text               c_w.l(sys_command.o)(c_w.l)
    0x08000510   0x00000002   Code   RO          386    .text               c_w.l(use_no_semi.o)(c_w.l)
    0x08000512   0x00000004   Code   RO          388    .text               c_w.l(hrguard.o)(c_w.l)
    0x08000516   0x0000000e   Code   RO          390    .text               c_w.l(defsig_rtmem_outer.o)(c_w.l)
    0x08000524   0x0000000a   Code   RO          411    .text               c_w.l(defsig_exit.o)(c_w.l)
    0x0800052e   0x00000002   PAD
    0x08000530   0x0000004c   Code   RO          413    .text               c_w.l(defsig_rtmem_inner.o)(c_w.l)
    0x0800057c   0x00000032   Code   RO          417    .text               c_w.l(defsig_general.o)(c_w.l)
    0x080005ae   0x0000000e   Code   RO          419    .text               c_w.l(sys_wrch.o)(c_w.l)
    0x080005bc   0x0000000e   Code   RO          358    x$fpl$fpinit        fz_ws.l(fpinit.o)(fz_ws.l)
    0x080005ca   0x00000002   PAD
    0x080005cc   0x00000000   Data   RO          439    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000678, Max: 0x00005000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000014   Data   RW           18    .data               system_stm32f10x.o
    0x20000014   0x00000060   Zero   RW          313    .bss                c_w.l(libspace.o)(c_w.l)
    0x20000074   0x00000004   PAD
    0x20000078   0x00000200   Zero   RW          224    HEAP                startup_stm32f10x_md.o
    0x20000278   0x00000400   Zero   RW          223    STACK               startup_stm32f10x_md.o

